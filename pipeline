import hudson.model.*
import hudson.AbortException
import hudson.console.HyperlinkNote
import java.util.concurrent.CancellationException
import java.text.SimpleDateFormat

node {
    def RFCwindow
    stage('Test') { // for display purposes
        git branch: 'main', url: 'https://github.com/ast5005/pipeline-test.git'
        def filex = readFile './test'
        echo "${filex}"
        filePath = pwd()+'/test'
        echo filePath
        str = filex.split('\n')
        for(String values:str)
        echo values
        def pattern = "MM-dd-yyyy HH:mm:ss"
        def input = str[0]
        echo str[0]
        def date = Date.parse(pattern, input2)
        echo date.getDateTimeString()
        def job = Hudson.instance.getJob('trigger-test')
        def anotherBuild
        def cronparam = { date -> "TZ=America/Chicago \n ${date.minutes} ${date.hours} ${date.days} ${date.months} *" }
       try {
            def params = [
                new StringParameterValue('cron',cronparam(date))    
            ]
            def future = job.scheduleBuild2(0, null, new ParametersAction(params))
        }catch (CancellationException x) {
    throw new AbortException("${job.fullDisplayName} aborted.")
}
    }
}
